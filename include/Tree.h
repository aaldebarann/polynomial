#pragma once
#include "Table.h"
struct Obj
{
	Node DataCase;
	int height; // она же глубина
	Obj* right;
	Obj* left;
};
typedef struct Obj* nodeptr;

class Tree
{
private:
	int bsheight(nodeptr); // высота(глубина) до конкретного объекта (звена) в дереве
	nodeptr srl(nodeptr&);
	nodeptr drl(nodeptr&);// левый поворот
	nodeptr srr(nodeptr&);
	nodeptr drr(nodeptr&); //правый поворот		   
	int max(int, int); // максимальное из двух имен 
	int comparison(string, string); // сравнение имен
	Polynome deletemin(nodeptr&);
	nodeptr nodecopy(nodeptr&);
	void copy(nodeptr&, nodeptr&);
public:
	Polynome find(string, nodeptr&);
	void insert(Node, nodeptr&);
	void del(string, nodeptr&);
	void clear(nodeptr&); // очищает дерево
	// три варианта принтов 
	void preorder(nodeptr);
	void inorder(nodeptr);
	void postorder(nodeptr);

	

};

